{"version":3,"sources":["view/images/Trollface.png","App.js","index.js"],"names":["module","exports","App","state","selectMemes","topText","bottomText","textColor","memeImg","allMemeImages","imageCounter","handleChange","bind","handleSubmit","memesarray","axios","get","then","response","memes","data","memeItem","i","length","push","key","id","value","url","name","setState","event","preventDefault","this","console","log","target","className","src","logo","alt","onSubmit","type","onChange","placeholder","htmlFor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,uC,mQCoI5BC,E,YA5Hd,aAAc,IAAD,8BACX,+CACKC,MAAQ,CACXC,YAAa,mCACbC,QAAS,GACTC,WAAY,GACZC,UAAW,aACXC,QAAS,GACTC,cAAe,GACfC,aAAc,GAGhB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAEpB,EAAKE,WAAa,GAfP,E,iFAkBQ,IAAD,OACjBC,IAAMC,IAAI,qCACPC,MAAK,SAAAC,GAIJ,IAHA,IAAMC,EAAQD,EAASE,KAEjBC,EAAW,GACTC,EAAE,EAAGA,EAAEH,EAAMC,KAAKD,MAAMI,OAAOD,IACrCD,EAASG,KAAK,4BAAQC,IAAKN,EAAMC,KAAKD,MAAMG,GAAGI,GAAIC,MAAOR,EAAMC,KAAKD,MAAMG,GAAGM,KAAMT,EAAMC,KAAKD,MAAMG,GAAGO,OAE1G,EAAKC,SAAS,CACZrB,cAAeU,EACfX,QAASW,EAAMC,KAAKD,MAAM,GAAGS,MAEhC,EAAKd,WAAaO,EAClB,EAAKS,SAAS,CACZpB,aAAc,S,mCAKRqB,GACVA,EAAMC,iBAQNC,KAAKH,SAAS,CACbtB,QAASyB,KAAK9B,MAAMC,cAEtB8B,QAAQC,IAAIF,KAAK9B,MAAMC,e,mCAEZ2B,GAAO,IAAD,EACIA,EAAMK,OAApBP,EADU,EACVA,KAAKF,EADK,EACLA,MACZM,KAAKH,SAAL,eACGD,EAAQF,M,+BAWX,OACE,yBAAKU,UAAU,kBACb,gCACE,yBAAKC,IAAKC,IAAMC,IAAI,iBACpB,+CAGF,yBAAKH,UAAU,kBACb,yBAAKA,UAAU,kBACb,0BAAMI,SAAUR,KAAKpB,cAClB,2DACA,2BACE6B,KAAK,OACLb,KAAK,UACLc,SAAUV,KAAKtB,aACfgB,MAASM,KAAK9B,MAAME,QACpBuC,YAAc,oBAEhB,2BACEF,KAAK,OACLb,KAAK,aACLc,SAAUV,KAAKtB,aACfgB,MAASM,KAAK9B,MAAMG,WACpBsC,YAAc,uBAEhB,2BAAOC,QAAQ,UAAf,sBAhBH,IAgBsD,6BACnD,4BACGhB,KAAK,cACLF,MAAOM,KAAK9B,MAAMC,YAClBuC,SAAUV,KAAKtB,cAEdsB,KAAKnB,YAET,4BAAQuB,UAAU,mBAAlB,WAYL,yBAAKA,UAAU,QACV,yBAAKC,IAAKL,KAAK9B,MAAMK,QAASgC,IAAI,sBAClC,wBAAIH,UAAU,YAAYJ,KAAK9B,MAAME,SACrC,wBAAIgC,UAAU,eAAeJ,KAAK9B,MAAMG,cAI/C,mE,GAxHUwC,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8e0d01be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trollface.be324d5b.png\";","import React from 'react';\nimport './App.css';\nimport logo from './view/images/Trollface.png';\nimport axios from 'axios';\n\n\nclass App extends React.Component {\n  \n constructor(){\n   super();\n   this.state = {\n     selectMemes: 'https://i.imgflip.com/1otk96.jpg',\n     topText: '',\n     bottomText: '',\n     textColor: 'whiteColor',\n     memeImg: '',\n     allMemeImages: [],\n     imageCounter: 0,\n  \n   }\n   this.handleChange = this.handleChange.bind(this);\n   this.handleSubmit = this.handleSubmit.bind(this);\n   //this.handleColor = this.handleColor.bind(this);\n   this.memesarray = [];\n }\n\n  componentDidMount(){\n    axios.get('https://api.imgflip.com/get_memes')\n      .then(response => {\n        const memes = response.data;\n        //console.log(JSON.stringify( memes));\n        const memeItem = [];\n        for(let i=0; i<memes.data.memes.length;i++){\n          memeItem.push(<option key={memes.data.memes[i].id} value={memes.data.memes[i].url}>{memes.data.memes[i].name}</option>);\n        }\n        this.setState({ \n          allMemeImages: memes,\n          memeImg: memes.data.memes[0].url\n       });\n       this.memesarray = memeItem;\n       this.setState({\n         imageCounter: 1\n       });\n      //  console.log(this.memesarray);\n      })\n  }\n  handleSubmit(event){\n     event.preventDefault();\n    //  let newCounter = this.state.imageCounter + 1;\n    //  this.setState({\n    //   memeImg: this.state.allMemeImages.data.memes[this.state.imageCounter].url,\n    //   imageCounter: newCounter\n    // });\n    // New feature added.\n\n     this.setState({\n      memeImg: this.state.selectMemes\n    });\n    console.log(this.state.selectMemes);\n  }\n  handleChange(event){\n    const {name,value} = event.target;\n    this.setState({\n      [name] : value\n    });\n  }\n  // handleColor(event){\n  //   this.setState({\n  //      textColor: event.target.value\n  //   });\n  //   // const textdiv = document.getElementsByClassName('top-text');\n  //   // textdiv.classList.add('whiteColor');\n  // }\n  render(){\n    return (\n      <div className=\"main-container\">\n        <header>\n          <img src={logo} alt=\"img problem?\"/>\n          <h3>Meme Generator</h3>\n        </header>\n        \n        <div className=\"meme-generator\">\n          <div className=\"image-selector\">\n            <form onSubmit={this.handleSubmit}>\n               <p>Type something on your meme:</p>\n               <input \n                 type=\"text\"\n                 name=\"topText\"\n                 onChange={this.handleChange}\n                 value = {this.state.topText}\n                 placeholder = \"Text on the top\"\n               />\n               <input \n                 type=\"text\"\n                 name=\"bottomText\"\n                 onChange={this.handleChange}\n                 value = {this.state.bottomText}\n                 placeholder = \"Text on the bottom\"\n               />\n               <label htmlFor=\"select\">Select your image:</label> <br/>\n               <select \n                  name=\"selectMemes\" \n                  value={this.state.selectMemes}\n                  onChange={this.handleChange}\n                  >\n                  {this.memesarray}\n               </select>\n               <button className=\"generate-button\">Memes</button>\n               {/* <label htmlFor=\"\">Text color:</label>\n               <select \n                  name=\"textColor\" \n                  value={this.state.textColor}\n                  onChange={this.handleColor}\n                  >\n                  <option value=\"black\">Dark</option>\n                  <option value=\"white\">Light</option>\n               </select> */}\n            </form>\n          </div>\n          <div className=\"meme\">\n               <img src={this.state.memeImg} alt=\"problem meme img?\"/>\n               <h2 className=\"top-text\">{this.state.topText}</h2>\n               <h2 className=\"bottom-text\">{this.state.bottomText}</h2>\n          </div>\n        </div>\n\n        <footer>&copy; Meshu Deb Nath | 2020</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}